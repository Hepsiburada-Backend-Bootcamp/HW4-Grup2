// <auto-generated />
using System;
using HW4_Grup4.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HW4_Grup4.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211014192621_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ankara",
                            CreatedAt = new DateTime(2021, 10, 14, 22, 26, 20, 685, DateTimeKind.Local).AddTicks(2042),
                            OrderNumber = 1,
                            TotalPrice = 1500.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "istanbul",
                            CreatedAt = new DateTime(2021, 10, 14, 22, 26, 20, 691, DateTimeKind.Local).AddTicks(900),
                            OrderNumber = 2,
                            TotalPrice = 2000.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "izmir",
                            CreatedAt = new DateTime(2021, 10, 14, 22, 26, 20, 691, DateTimeKind.Local).AddTicks(934),
                            OrderNumber = 3,
                            TotalPrice = 2500.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "adana",
                            CreatedAt = new DateTime(2021, 10, 14, 22, 26, 20, 691, DateTimeKind.Local).AddTicks(938),
                            OrderNumber = 4,
                            TotalPrice = 3000.0,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemPrice = 1000.0,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            ItemPrice = 500.0,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            ItemPrice = 1000.0,
                            OrderId = 2,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            ItemPrice = 1500.0,
                            OrderId = 3,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemPrice = 1000.0,
                            OrderId = 3,
                            ProductId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            ItemPrice = 1000.0,
                            OrderId = 4,
                            ProductId = 3,
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Apple iPad",
                            Price = 1000f
                        },
                        new
                        {
                            Id = 2,
                            Name = "Samsung Smart TV",
                            Price = 1500f
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nokia 3310",
                            Price = 500f
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dell Mouse",
                            Price = 250f
                        },
                        new
                        {
                            Id = 5,
                            Name = "Samsung Monitor",
                            Price = 1000f
                        });
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Birinci",
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "Baltacı",
                            Name = "İlker"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "Kocatepe",
                            Name = "Mustafa"
                        },
                        new
                        {
                            Id = 4,
                            LastName = "Aykan",
                            Name = "Mehmet Emin"
                        });
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.Order", b =>
                {
                    b.HasOne("HW4_Grup4.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("HW4_Grup4.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW4_Grup4.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("HW4_Grup4.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
